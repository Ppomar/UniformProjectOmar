@using UniformProjectOmar.Models


<table class="table table-hover" style="table-layout:auto;">
    <thead>
        <tr>
            <th>Fecha</th>
            <th>Tipo de Movimiento</th>
            <th>Cantidad</th>
            <th>Talla</th>
            <th>Artículo</th>
            <th>Nombre del Empleado</th>
            <th>Grupo</th>
            <th>Tipo de Empleado</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Movimientos == null || Movimientos.Count == 0)
        {
            <tr class="text-center">
                <td colspan="9">Lista vacia</td>
            </tr>
        }
        else if (Movimientos != null && Movimientos.Count > 0)
        {
            foreach (var movimiento in Movimientos)
            {
                <tr>
                    <td>@movimiento.Fecha</td>
                    <td>@movimiento.TipoMovimiento</td>
                    <td>@movimiento.Cantidad</td>
                    <td>@movimiento.Talla</td>
                    <td>@movimiento.Articulo</td>
                    <td>@movimiento.NombreEmpleado</td>
                    <td>@movimiento.Grupo</td>
                    <td>@movimiento.TipoEmpleado</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => OnDeleteClicked(movimiento.Id)"><i class="bi bi-trash"></i></button>
                        <button class="btn btn-warning" @onclick="() => OnEditClicked(movimiento.Id)"><i class="bi bi-pencil"></i></button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>



@code {
    [Parameter]
    public List<MovimientoVw>? Movimientos { get; set; }

    [Parameter]
    public EventCallback<int> OnDelete { get; set; }

    [Parameter]
    public EventCallback<int> OnEdit { get; set; }

    private async Task OnDeleteClicked(int id)
    {
        await OnDelete.InvokeAsync(id);
    }

    private async Task OnEditClicked(int id)
    {
        await OnEdit.InvokeAsync(id);
    }
}
